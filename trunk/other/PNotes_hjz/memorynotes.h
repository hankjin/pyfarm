#ifndef __MEMORYNOTES_H__
#define __MEMORYNOTES_H__

PMEMNOTE MemoryNotes(void);
PMEMNOTE AddMemNote(void);
void FreeMemNotes(void);
PMEMNOTE MemNoteByHwnd(HWND hwnd);
P_NOTE_APPEARANCE NoteAppearance(HWND hwnd);
P_NOTE_RTHANDLES NoteRTHandles(HWND hwnd);
P_NOTE_RTHANDLES NoteSavedHandles(HWND hwnd);
P_NOTE_FLAGS NoteFlags(HWND hwnd);
P_NOTE_DATA NoteData(HWND hwnd);
P_SCHEDULE_TYPE NoteSchedule(HWND hwnd);
PMEMNOTE MemNoteByTimer(UINT_PTR idEvent);
void DeleteMemNote(PMEMNOTE pNote);
void ApplyNewDockSkin(void);
void ApplyNewCommonSkin(void);
void ApplyNewBackgroundColor(void);
void ApplyNewCaptionFont(void);
void ApplyNewCaptionColor(void);
void ApplyNewFont(void);
void ApplyNewTextColor(void);
void ApplyJustRedraw(void);
void ApplyNewLanguage(void);
void ApplyTransparencyValue(void);
void ApplyRestrictTransparency(void);
void ApplySaveOnUnload(int args, BOOL beforeReload);
void ApplyAutosaveNotes(void);
void ApplySaveAllNotes(void);
void ApplyCloseAllNotes(void);
void ApplyOnTopChanged(void);
void ApplyDockSizeOrderChanged(void);
void ApplyDockingColors(void);
void ApplySessionLogOn(void);
void ApplyHideAllNotes(void);
void DeleteToBin(PMEMNOTE pNote, int withGroup);
void EmptyRecycleBin(void);
int NotesCount(void);
int CountNotesInGroup(int id);
int CountNotesAlive(void);
void RestoreNoteFromBin(PMEMNOTE pNote, int toGroup);
void HideNote(PMEMNOTE pNote);
void ShowNote(PMEMNOTE pNote);
void SendNoteAsAttachment(PMEMNOTE pNote);
void ShowGroupOfNotes(int group);
void HideGroupOfNotes(int group);
void SavePNote(PMEMNOTE pNote);
void ToggleNoteCompleted(PMEMNOTE pNote);
void ToggleNotePriority(PMEMNOTE pNote);
void ToggleNoteOnTop(PMEMNOTE pNote);
void ToggleNoteProtection(PMEMNOTE pNote);
void SendMultipleNotesAsAttachments(LONG_PTR *pNotes, int count);
void BringNotesToFront(void);
#endif	// MEMORYNOTES_H__
